class Images {
  PGraphics backgroundPG = createGraphics(width, height);
  PGraphics snowPG = createGraphics(20, 20);
  PGraphics starPG = createGraphics(60, 60);
  PGraphics shotPG = createGraphics(20, 20);
  PGraphics snowManPG = createGraphics(85, 150);
  PGraphics treePG = createGraphics(200, 200);
  PGraphics targetPG = createGraphics(80, 100);
  
  Images() {
    backgroundPG.beginDraw();
    backgroundPG.noStroke();
      backgroundPG.fill(LIGHT_GREEN);
      backgroundPG.rect(0, 0, width, height);      
      backgroundPG.fill(0, 10);
      backgroundPG.rect(0, height/2, width, height/2);      
      backgroundPG.fill(255, 150);
      backgroundPG.quad(width*0.6, height/2, width*0.4, height*0.5, -width/13, height, width*14/13, height);
      backgroundPG.fill(255);
      backgroundPG.ellipse((0.5+0)*width/5, height, width/4, height/4);
      backgroundPG.ellipse((0.5+1)*width/5, height, width/4, height/4);
      backgroundPG.ellipse((0.5+2)*width/5, height, width/4, height/4);
      backgroundPG.ellipse((0.5+3)*width/5, height, width/4, height/4);
      backgroundPG.ellipse((0.5+4)*width/5, height, width/4, height/4);
    backgroundPG.endDraw();
    
    snowPG.beginDraw();
      snowPG.background(255, 0);
      snowPG.noStroke();
      snowPG.textAlign(CENTER, CENTER);
      snowPG.textFont(fontSnow);
      snowPG.textSize(20);
      snowPG.fill(255);
      snowPG.text('\u2744', 10, 10);
    snowPG.endDraw();
    
    starPG.beginDraw();
      starPG.noStroke();
      starPG.textAlign(CENTER, CENTER);
      starPG.textFont(fontSnow);
      starPG.textSize(60);
      starPG.fill(GOLD);
      starPG.text('\u2736', 30, 30);
    starPG.endDraw();
    
    shotPG.beginDraw();
      shotPG.background(255, 0);
      shotPG.noStroke();
      shotPG.pushMatrix();
      shotPG.translate(10, 10);
        shotPG.fill(GOLD);
        shotPG.ellipse(0, 0, 20, 20);
        shotPG.fill(255);
        shotPG.ellipse(0, 0, 17, 17);
      shotPG.popMatrix();
    shotPG.endDraw();
    
    snowManPG.beginDraw();
      snowManPG.background(100, 0);
      snowManPG.noStroke();
      snowManPG.pushMatrix();
      snowManPG.translate(85/2, 75);
        snowManPG.fill(0, 40);
        snowManPG.ellipse(0, 0, 85, 100);
        snowManPG.ellipse(0, -50, 50, 50);
        snowManPG.fill(255);      
        snowManPG.ellipse(0, 0, 80, 95);
        snowManPG.ellipse(0, -50, 45, 45);
        snowManPG.fill(BROWN);
        snowManPG.ellipse(-7, -55, 5, 5);
        snowManPG.ellipse(7, -55, 5, 5);
        snowManPG.fill(RED);
        snowManPG.triangle(0, -30, -4, -45, 4, -45);
        snowManPG.fill(LIGHT_GREEN);
        snowManPG.arc(0, -25, 71, 30, -QUARTER_PI, PI+QUARTER_PI, PIE);
        snowManPG.pushMatrix();
        snowManPG.translate(10, -5);
        snowManPG.rotate(QUARTER_PI);
        snowManPG.ellipse(0, 0, 20, 40);
        snowManPG.popMatrix();
      snowManPG.popMatrix();   
    snowManPG.endDraw();
    
    treePG.beginDraw();
    treePG.imageMode(CENTER);
    treePG.noStroke();
    treePG.pushMatrix();
    treePG.translate(100, 100);
      treePG.fill(BROWN);
      treePG.quad(-20, 50, 20, 50, 15, 70, -15, 70);      
      treePG.fill(DARK_GREEN);
      treePG.beginShape();
        treePG.vertex(0, -100);        
        treePG.vertex(-50, -50);
        treePG.vertex(-15, -50);
        treePG.vertex(-75, 0);
        treePG.vertex(-20, 0);
        treePG.vertex(-100, 50);        
        treePG.vertex(100, 50);
        treePG.vertex(20, 0);
        treePG.vertex(75, 0);
        treePG.vertex(15, -50);
        treePG.vertex(50, -50);
      treePG.endShape(CLOSE);
    treePG.popMatrix();
    treePG.endDraw();
    
    targetPG.beginDraw();
    targetPG.noStroke();
    targetPG.pushMatrix();
    targetPG.translate(40, 50);
      targetPG.fill(BROWN);
      targetPG.ellipse(0, -25, 40, 40);
      targetPG.ellipse(0, 5, 30, 80);      
      targetPG.pushMatrix();
      targetPG.translate(-15, -5);
      targetPG.rotate(-QUARTER_PI);
      targetPG.ellipse(0, 0, 20, 40);
      targetPG.popMatrix();      
      targetPG.pushMatrix();
      targetPG.translate(15, -5);
      targetPG.rotate(QUARTER_PI);
      targetPG.ellipse(0, 0, 20, 40);
      targetPG.popMatrix();      
      targetPG.pushMatrix();
      targetPG.translate(10, 35);
      targetPG.rotate(-QUARTER_PI);
      targetPG.ellipse(0, 0, 20, 40);
      targetPG.popMatrix();      
      targetPG.pushMatrix();
      targetPG.translate(-10, 35);
      targetPG.rotate(QUARTER_PI);
      targetPG.ellipse(0, 0, 20, 40);
      targetPG.popMatrix();      
      targetPG.fill(255);
      targetPG.ellipse(-7, -30, 5, 5);
      targetPG.ellipse(7, -30, 5, 5);
      targetPG.arc(0, -20, 14, 10, 0, PI);      
      targetPG.fill(RED);
      targetPG.ellipse(0, 0, 8, 10);
      targetPG.ellipse(0, 15, 8, 10);
    targetPG.popMatrix();
    targetPG.endDraw();    
  }  
}